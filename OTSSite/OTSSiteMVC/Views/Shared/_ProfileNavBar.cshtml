@inject Microsoft.AspNetCore.Identity.UserManager<OTSSiteMVC.Entities.AppIdentityUser> _userManager
@inject Microsoft.AspNetCore.Identity.RoleManager<OTSSiteMVC.Entities.AppIdentityRole> _roleManager

@{ 
    var user = await _userManager.GetUserAsync(User);
    var currentUserRoles = user == null ? new string[0] : await _userManager.GetRolesAsync(user);
    var chosen = false;
}


<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <ul class="navbar-nav">
        @if (currentUserRoles.Contains("author"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark">Author Dashboard</a>
            </li>
            chosen = true;
        }
        @if (currentUserRoles.Contains("editor"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark">Editor Dashboard</a>
            </li>
            chosen = true;
        }
        @if (currentUserRoles.Contains("administrator"))
        {
            <li class="nav-item">
                <a asp-controller="Admin" asp-action="Index" class="nav-link text-dark">Admin Dashboard</a>
            </li>
            chosen = true;
        }
        @if(chosen)
        {
            <li class="nav-item">
                <a asp-controller="Image" asp-action="Upload" class="nav-link text-dark">Upload Images</a>
            </li>
            <li class="nav-item">
                <a asp-controller="Image" asp-action="Images" class="nav-link text-dark">View Images</a> 
            </li>
        }

    </ul>
</nav>
